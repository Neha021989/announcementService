{
"Resources": {
	"IAMLambdaServiceRole":
	{
		"Type": "AWS::IAM::Role",
		"Properties": {
	    "RoleName": "LambdaServiceRole",
	 		"AssumeRolePolicyDocument": {
			  "Version": "2012-10-17",
			  "Statement": [
	      {
	        "Sid": "",
	        "Effect": "Allow",
	        "Principal": {
	          "Service": "lambda.amazonaws.com"
	          },
	        "Action": "sts:AssumeRole"
	      }
			  ]
			},
			"ManagedPolicyArns": ["arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"],
			"Policies": [{
				"PolicyName": "LambdaServiceRolePolicy",
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
	          {
	          "Action": ["s3:Get*","s3:List*","dynamodb:*","sns:*"],
	          "Resource": "*",
	          "Effect": "Allow"
	        }
					]
				}
			}]
		}
	},
"IAMAPIServiceRole":
{
	"Type": "AWS::IAM::Role",
	"Properties": {
    "RoleName": "LambdaAPIServiceRole",
 		"AssumeRolePolicyDocument": {
		  "Version": "2012-10-17",
		  "Statement": [
			{
			  "Sid": "",
			  "Effect": "Allow",
			  "Principal": {
				"Service": "apigateway.amazonaws.com"
			  },
			  "Action": "sts:AssumeRole"
			}
		  ]
		},
		"ManagedPolicyArns": ["arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"],
		"Policies": [{
			"PolicyName": "API_Service_Role_Policy",
			"PolicyDocument": {
				"Version": "2012-10-17",
				"Statement": [
						{
						"Action": "lambda:InvokeFunction",
						"Resource": {"Fn::GetAtt": ["APIFunction", "Arn"]},
						"Effect": "Allow"
					}
				]
			}
		}]
	}
},
"APIFunction": {
	"Type": "AWS::Lambda::Function",
	"Properties": {
		"FunctionName": "announcement",
		"Description": "Announcement details",
		"Code": {
			"S3Bucket": "announcement-lambda",
			"S3Key": "announcement-1.0.0.jar"
		},
		"Handler": "com.amazonaws.lambda.anncouncement.AccouncementHandler::handleRequest",
		"Runtime": "java8",
		"MemorySize": 1024,
		"Role": {"Fn::GetAtt": ["IAMLambdaServiceRole", "Arn"]},
    "Timeout" : 60
	}
},
"RestAPI": {
"Type" : "AWS::ApiGateway::RestApi",
"Properties" : {
    "Description" : "API to get announcement",
    "Name" : "announcement API",
	"EndpointConfiguration": {"Types" : ["REGIONAL"]},
"Body" : {
  "openapi" : "3.0.1",
  "info" : {
    "title": "announcement-API",
    "description": "Created by AWS Lambda",
    "version": "2021-04-18T10:16:47Z"
  },
  "servers" : [ {
     "url": "https://6jogk632xb.execute-api.ap-south-1.amazonaws.com/{basePath}",
      "variables": {
        "basePath": {
          "default": "/default"
      }
    }
  } ],
  "paths" : {
    "/announcement" : {
      "x-amazon-apigateway-any-method" : {
        "responses" : {
          "default" : {
            "description" : "Default response for ANY /announcement"
          }
        },
        "x-amazon-apigateway-integration" : {
          "payloadFormatVersion" : "2.0",
          "type" : "aws_proxy",
          "httpMethod" : "POST",
          "uri" : "arn:aws:apigateway:ap-south-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-south-1:575510770086:function:announcement/invocations",
          "credentials": {"Fn::GetAtt": ["IAMAPIServiceRole", "Arn"]},
		  "connectionType" : "INTERNET"
        }
      }
    }
  },
  "x-amazon-apigateway-importexport-version" : "1.0"
}
}
},
    "GetAnnouncementLogGroup": {
    "Type": "AWS::Logs::LogGroup",
		"DependsOn": "APIFunction",
    "Properties": {
        "LogGroupName": {"Fn::Join": ["", ["/aws/lambda/", {"Ref":"APIFunction"}]]}
    	}
},
  "ApiGatewayCloudWatchLogsRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": { "Service": ["apigateway.amazonaws.com"] },
            "Action": ["sts:AssumeRole"]
          }]
        },
        "Policies": [{
          "PolicyName": "API_GW_Logs_Policy",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:DescribeLogGroups",
                "logs:DescribeLogStreams",
                "logs:PutLogEvents",
                "logs:GetLogEvents",
                "logs:FilterLogEvents"
              ],
              "Resource": "*"
            }]
          }
        }]
      }
    },
        "ApiGatewayAccount": {
          "Type": "AWS::ApiGateway::Account",
          "Properties": {
            "CloudWatchRoleArn": {"Fn::GetAtt": ["ApiGatewayCloudWatchLogsRole", "Arn"] }
          }
        },
               "RestAPIDeployment": {
                 "Type": "AWS::ApiGateway::Deployment",
								 "DependsOn": ["RestAPI"],
                 "Properties": {
                   "RestApiId": {"Ref": "RestAPI"},
                   "StageName": "dev"
        }
      }
  }
}
